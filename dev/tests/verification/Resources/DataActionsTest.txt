<?php
namespace Magento\AcceptanceTest\_default\Backend;

use Magento\FunctionalTestingFramework\AcceptanceTester;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\DataObjectHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Persist\DataPersistenceHandler;
use Magento\FunctionalTestingFramework\DataGenerator\Objects\EntityDataObject;
use Magento\FunctionalTestingFramework\DataGenerator\Handlers\CredentialStore;
use \Codeception\Util\Locator;
use Yandex\Allure\Adapter\Annotation\Features;
use Yandex\Allure\Adapter\Annotation\Stories;
use Yandex\Allure\Adapter\Annotation\Title;
use Yandex\Allure\Adapter\Annotation\Description;
use Yandex\Allure\Adapter\Annotation\Parameter;
use Yandex\Allure\Adapter\Annotation\Severity;
use Yandex\Allure\Adapter\Model\SeverityLevel;
use Yandex\Allure\Adapter\Annotation\TestCaseId;

/**
 */
class DataActionsTestCest
{
	/**
	  * @var DataPersistenceHandler $createdInBefore;
	  */
	protected $createdInBefore;

	/**
	  * @var DataPersistenceHandler $updateInBefore;
	  */
	protected $updateInBefore;

	/**
	  * @param AcceptanceTester $I
	  * @throws \Exception
	  */
	public function _before(AcceptanceTester $I)
	{
		$I->amGoingTo("create entity that has the stepKey: createdInBefore");
		$entity = DataObjectHandler::getInstance()->getObject("entity");
		$this->createdInBefore = new DataPersistenceHandler($entity, []);
		$this->createdInBefore->createEntity();
		$I->amGoingTo("update entity that has the createdDataKey: createdInBefore");
		$this->createdInBefore->updateEntity("entity");
		$I->amGoingTo("delete entity that has the createDataKey: createdInBefore");
		$this->createdInBefore->deleteEntity();
	}

	/**
	 * @Features({"TestModule"})
	 * @Parameter(name = "AcceptanceTester", value="$I")
	 * @param AcceptanceTester $I
	 * @return void
	 * @throws \Exception
	 */
	public function DataActionsTest(AcceptanceTester $I)
	{
		$I->amGoingTo("create entity that has the stepKey: createdInTest");
		$entity = DataObjectHandler::getInstance()->getObject("entity");
		$createdInTest = new DataPersistenceHandler($entity, []);
		$createdInTest->createEntity();
		$I->amGoingTo("update entity that has the createdDataKey: createdInTest");
		$createdInTest->updateEntity("entity");
		$I->amGoingTo("delete entity that has the createDataKey: createdInTest");
		$createdInTest->deleteEntity();
		$I->amGoingTo("update entity that has the createdDataKey: createdInBefore");
		$this->createdInBefore->updateEntity("entity");
		$I->amGoingTo("delete entity that has the createDataKey: createdInBefore");
		$this->createdInBefore->deleteEntity();
	}
}
